on: push

name: Docker build and push
jobs:
  php-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.php-versions.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - name: Lookup PHP versions from Dockerfile-* names
      run: echo ::set-output name=matrix::$(ls Dockerfile-* | cut -c 12- | jq --raw-input --slurp 'split("\n") | map(select(. != ""))')
      id: php-versions
  build:
    name: Docker build and push
    if: >
      ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: php-versions
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJSON(needs.php-versions.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Login to DockerHub
      uses: docker/login-action@v2
      if: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      if: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile-${{ matrix.php }}
        builder: ${{ steps.buildx.outputs.name }}
        push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        context: .
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ matrix.php }}-${{ github.sha }}
          org.opencontainers.image.revision=${{ github.sha }}
        tags: |
          ghcr.io/${{ github.repository }}:${{ matrix.php }}
          reload/drupal-php7-fpm:${{ matrix.php }}
